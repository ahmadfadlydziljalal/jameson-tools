version: "3.7"

# SERVICES
services:

  db:
    image: mysql:8.0.28-oracle
    hostname: mysql
    container_name: ${APP_NAME}-db
    tty: false
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - ${APP_NAME}-volumes:/var/lib/mysql/
      - ./my.cnf:/etc/mysql/my.cnf
      - ./prod.sql:/docker-entrypoint-initdb.d/prod.sql
    networks:
      - ${APP_NAME}-network
    ports:
      - ${DB_PORT}:3306

  check-db-started:
    image: jwilder/dockerize:0.6.1
    container_name: ${APP_NAME}-check-db-started
    depends_on:
      - db
    command: 'dockerize -wait=tcp://db:3306'

  php:
    image: "${REGISTRY_HOST}/${APP_NAME}-php:latest"
    hostname: php
    container_name: ${APP_NAME}-php
    tty: true
    working_dir: /var/www/html
    ports:
      - "${WEB_SERVER_PORT}:80"
      - "443:443"
    env_file:
      - .env
    environment:
      - ENV=production
      - TARGET=production
    networks:
      - ${APP_NAME}-network
    volumes:
      - ./etc:/etc/letsencrypt:ro                                          # BIND MOUNT SSL CERTIFICATE HASIL CERTBOT DI-READ VIRTUALHOST SETTING
      # - ./www:/var/www/html/web:ro                                       # UNCOMMENT UNTUK MENDAPATKAN SSL CERTIFICATE PERTAMA KALI
      # - ./000-default.conf:/etc/apache2/sites-available/000-default.conf # UNTUK TESTING SAJA
    depends_on:
      - check-db-started
      - db
    restart: on-failure

# Docker Networks
networks:
  jameson_tools-network:
    driver: bridge

# Docker Volumes
volumes:
  jameson_tools-volumes:
    driver: local