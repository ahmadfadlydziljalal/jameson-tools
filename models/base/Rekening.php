<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\helpers\ArrayHelper;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;
use \app\models\active_queries\RekeningQuery;

/**
 * This is the base-model class for table "rekening".
 *
 * @property integer $id
 * @property integer $card_id
 * @property string $atas_nama
 * @property string $nama_bank
 * @property string $nomor_rekening
 * @property string $saldo_awal
 * @property integer $created_at
 * @property integer $updated_at
 * @property string $created_by
 * @property string $updated_by
 *
 * @property \app\models\BuktiPenerimaanBukuBank[] $buktiPenerimaanBukuBanks
 * @property \app\models\BuktiPengeluaranBukuBank[] $buktiPengeluaranBukuBanks
 * @property \app\models\BuktiPengeluaranBukuBank[] $buktiPengeluaranBukuBanks0
 * @property \app\models\Card $card
 * @property \app\models\Faktur[] $fakturs
 * @property \app\models\Invoice[] $invoices
 * @property \app\models\Quotation[] $quotations
 * @property \app\models\RekeningDetail[] $rekeningDetails
 * @property \app\models\TransaksiBukuBankLainnya[] $transaksiBukuBankLainnyas
 */
abstract class Rekening extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'rekening';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['blameable'] = [
            'class' => BlameableBehavior::class,
        ];
        $behaviors['timestamp'] = [
            'class' => TimestampBehavior::class,
                        ];
        
    return $behaviors;
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        $parentRules = parent::rules();
        return ArrayHelper::merge($parentRules, [
            [['card_id', 'atas_nama', 'nama_bank', 'nomor_rekening'], 'required'],
            [['card_id'], 'integer'],
            [['atas_nama'], 'string'],
            [['saldo_awal'], 'number'],
            [['nama_bank', 'nomor_rekening'], 'string', 'max' => 255],
            [['card_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Card::class, 'targetAttribute' => ['card_id' => 'id']]
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return ArrayHelper::merge(parent::attributeLabels(), [
            'id' => 'ID',
            'card_id' => 'Card ID',
            'atas_nama' => 'Atas Nama',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'created_by' => 'Created By',
            'updated_by' => 'Updated By',
            'nama_bank' => 'Nama Bank',
            'nomor_rekening' => 'Nomor Rekening',
            'saldo_awal' => 'Saldo Awal',
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBuktiPenerimaanBukuBanks()
    {
        return $this->hasMany(\app\models\BuktiPenerimaanBukuBank::class, ['rekening_saya_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBuktiPengeluaranBukuBanks()
    {
        return $this->hasMany(\app\models\BuktiPengeluaranBukuBank::class, ['rekening_saya_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBuktiPengeluaranBukuBanks0()
    {
        return $this->hasMany(\app\models\BuktiPengeluaranBukuBank::class, ['vendor_rekening_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCard()
    {
        return $this->hasOne(\app\models\Card::class, ['id' => 'card_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getFakturs()
    {
        return $this->hasMany(\app\models\Faktur::class, ['rekening_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInvoices()
    {
        return $this->hasMany(\app\models\Invoice::class, ['nomor_rekening_tagihan_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getQuotations()
    {
        return $this->hasMany(\app\models\Quotation::class, ['rekening_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRekeningDetails()
    {
        return $this->hasMany(\app\models\RekeningDetail::class, ['rekening_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTransaksiBukuBankLainnyas()
    {
        return $this->hasMany(\app\models\TransaksiBukuBankLainnya::class, ['rekening_id' => 'id']);
    }

    /**
     * @inheritdoc
     * @return RekeningQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new RekeningQuery(static::class);
    }
}
