<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\helpers\ArrayHelper;
use \app\models\active_queries\BukuBankQuery;

/**
 * This is the base-model class for table "buku_bank".
 *
 * @property integer $id
 * @property integer $kode_voucher_id
 * @property integer $bukti_penerimaan_buku_bank_id
 * @property integer $bukti_pengeluaran_buku_bank_id
 * @property string $nomor_voucher
 * @property string $tanggal_transaksi
 * @property string $keterangan
 *
 * @property \app\models\BuktiPenerimaanBukuBank $buktiPenerimaanBukuBank
 * @property \app\models\BuktiPenerimaanPettyCash $buktiPenerimaanPettyCash
 * @property \app\models\BuktiPengeluaranBukuBank $buktiPengeluaranBukuBank
 * @property \app\models\KodeVoucher $kodeVoucher
 * @property \app\models\TransaksiBukuBankLainnya $transaksiBukuBankLainnya
 */
abstract class BukuBank extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'buku_bank';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        $parentRules = parent::rules();
        return ArrayHelper::merge($parentRules, [
            [['kode_voucher_id', 'tanggal_transaksi'], 'required'],
            [['kode_voucher_id', 'bukti_penerimaan_buku_bank_id', 'bukti_pengeluaran_buku_bank_id'], 'integer'],
            [['tanggal_transaksi'], 'safe'],
            [['keterangan'], 'string'],
            [['nomor_voucher'], 'string', 'max' => 255],
            [['bukti_penerimaan_buku_bank_id'], 'unique'],
            [['bukti_pengeluaran_buku_bank_id'], 'unique'],
            [['kode_voucher_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\KodeVoucher::class, 'targetAttribute' => ['kode_voucher_id' => 'id']],
            [['bukti_penerimaan_buku_bank_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\BuktiPenerimaanBukuBank::class, 'targetAttribute' => ['bukti_penerimaan_buku_bank_id' => 'id']],
            [['bukti_pengeluaran_buku_bank_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\BuktiPengeluaranBukuBank::class, 'targetAttribute' => ['bukti_pengeluaran_buku_bank_id' => 'id']]
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return ArrayHelper::merge(parent::attributeLabels(), [
            'id' => 'ID',
            'kode_voucher_id' => 'Kode Voucher ID',
            'bukti_penerimaan_buku_bank_id' => 'Bukti Penerimaan Buku Bank ID',
            'bukti_pengeluaran_buku_bank_id' => 'Bukti Pengeluaran Buku Bank ID',
            'nomor_voucher' => 'Nomor Voucher',
            'tanggal_transaksi' => 'Tanggal Transaksi',
            'keterangan' => 'Keterangan',
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBuktiPenerimaanBukuBank()
    {
        return $this->hasOne(\app\models\BuktiPenerimaanBukuBank::class, ['id' => 'bukti_penerimaan_buku_bank_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBuktiPenerimaanPettyCash()
    {
        return $this->hasOne(\app\models\BuktiPenerimaanPettyCash::class, ['buku_bank_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBuktiPengeluaranBukuBank()
    {
        return $this->hasOne(\app\models\BuktiPengeluaranBukuBank::class, ['id' => 'bukti_pengeluaran_buku_bank_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getKodeVoucher()
    {
        return $this->hasOne(\app\models\KodeVoucher::class, ['id' => 'kode_voucher_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTransaksiBukuBankLainnya()
    {
        return $this->hasOne(\app\models\TransaksiBukuBankLainnya::class, ['buku_bank_id' => 'id']);
    }

    /**
     * @inheritdoc
     * @return BukuBankQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new BukuBankQuery(static::class);
    }
}
