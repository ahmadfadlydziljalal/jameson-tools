<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\helpers\ArrayHelper;
use \app\models\active_queries\BarangQuery;

/**
 * This is the base-model class for table "barang".
 *
 * @property integer $id
 * @property integer $tipe_pembelian_id
 * @property string $nama
 * @property string $part_number
 * @property string $keterangan
 * @property string $jameson_tools_number
 * @property string $merk_part_number
 * @property integer $originalitas_id
 * @property string $initialize_stock_quantity
 * @property integer $default_satuan_id
 * @property string $photo
 * @property string $photo_thumbnail
 * @property string $price_per_item_in_usd
 * @property string $price_per_item_in_idr
 *
 * @property \app\models\BarangSatuan[] $barangSatuans
 * @property \app\models\ClaimPettyCashNotaDetail[] $claimPettyCashNotaDetails
 * @property \app\models\Satuan $defaultSatuan
 * @property \app\models\FakturDetail[] $fakturDetails
 * @property \app\models\HistoryLokasiBarang[] $historyLokasiBarangs
 * @property \app\models\InvoiceDetail[] $invoiceDetails
 * @property \app\models\MaterialRequisitionDetail[] $materialRequisitionDetails
 * @property \app\models\Originalitas $originalitas
 * @property \app\models\ProformaDebitNoteDetailBarang[] $proformaDebitNoteDetailBarangs
 * @property \app\models\ProformaInvoiceDetailBarang[] $proformaInvoiceDetailBarangs
 * @property \app\models\QuotationBarang[] $quotationBarangs
 * @property \app\models\TipePembelian $tipePembelian
 */
abstract class Barang extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'barang';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        $parentRules = parent::rules();
        return ArrayHelper::merge($parentRules, [
            [['tipe_pembelian_id', 'originalitas_id', 'default_satuan_id'], 'integer'],
            [['nama'], 'required'],
            [['keterangan', 'photo', 'photo_thumbnail'], 'string'],
            [['initialize_stock_quantity', 'price_per_item_in_usd', 'price_per_item_in_idr'], 'number'],
            [['nama', 'merk_part_number'], 'string', 'max' => 255],
            [['part_number'], 'string', 'max' => 32],
            [['jameson_tools_number'], 'string', 'max' => 128],
            [['originalitas_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Originalitas::class, 'targetAttribute' => ['originalitas_id' => 'id']],
            [['default_satuan_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Satuan::class, 'targetAttribute' => ['default_satuan_id' => 'id']],
            [['tipe_pembelian_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\TipePembelian::class, 'targetAttribute' => ['tipe_pembelian_id' => 'id']]
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return ArrayHelper::merge(parent::attributeLabels(), [
            'id' => 'ID',
            'tipe_pembelian_id' => 'Tipe Pembelian ID',
            'nama' => 'Nama',
            'part_number' => 'Part Number',
            'keterangan' => 'Keterangan',
            'jameson_tools_number' => 'Jameson Tools Number',
            'merk_part_number' => 'Merk Part Number',
            'originalitas_id' => 'Originalitas ID',
            'initialize_stock_quantity' => 'Initialize Stock Quantity',
            'default_satuan_id' => 'Default Satuan ID',
            'photo' => 'Photo',
            'photo_thumbnail' => 'Photo Thumbnail',
            'price_per_item_in_usd' => 'Price Per Item In Usd',
            'price_per_item_in_idr' => 'Price Per Item In Idr',
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return ArrayHelper::merge(parent::attributeHints(), [
            'default_satuan_id' => 'Satuan utama yang dipakai dalam stock',
            'price_per_item_in_usd' => 'Pertama kali penggunaan sistem. Karena based on time, nilai ini akan selalu berubah, contohnya melalui pembelian',
            'price_per_item_in_idr' => 'Pertama kali penggunaan sistem. Karena based on time, nilai ini akan selalu berubah, contohnya melalui pembelian',
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBarangSatuans()
    {
        return $this->hasMany(\app\models\BarangSatuan::class, ['barang_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getClaimPettyCashNotaDetails()
    {
        return $this->hasMany(\app\models\ClaimPettyCashNotaDetail::class, ['barang_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultSatuan()
    {
        return $this->hasOne(\app\models\Satuan::class, ['id' => 'default_satuan_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getFakturDetails()
    {
        return $this->hasMany(\app\models\FakturDetail::class, ['barang_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHistoryLokasiBarangs()
    {
        return $this->hasMany(\app\models\HistoryLokasiBarang::class, ['barang_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInvoiceDetails()
    {
        return $this->hasMany(\app\models\InvoiceDetail::class, ['barang_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getMaterialRequisitionDetails()
    {
        return $this->hasMany(\app\models\MaterialRequisitionDetail::class, ['barang_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOriginalitas()
    {
        return $this->hasOne(\app\models\Originalitas::class, ['id' => 'originalitas_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProformaDebitNoteDetailBarangs()
    {
        return $this->hasMany(\app\models\ProformaDebitNoteDetailBarang::class, ['barang_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProformaInvoiceDetailBarangs()
    {
        return $this->hasMany(\app\models\ProformaInvoiceDetailBarang::class, ['barang_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getQuotationBarangs()
    {
        return $this->hasMany(\app\models\QuotationBarang::class, ['barang_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTipePembelian()
    {
        return $this->hasOne(\app\models\TipePembelian::class, ['id' => 'tipe_pembelian_id']);
    }

    /**
     * @inheritdoc
     * @return BarangQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new BarangQuery(static::class);
    }
}
