<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\helpers\ArrayHelper;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;
use \app\models\active_queries\BuktiPenerimaanBukuBankQuery;

/**
 * This is the base-model class for table "bukti_penerimaan_buku_bank".
 *
 * @property integer $id
 * @property string $reference_number
 * @property integer $customer_id
 * @property integer $rekening_saya_id
 * @property integer $jenis_transfer_id
 * @property string $nomor_transaksi_transfer
 * @property string $tanggal_transaksi_transfer
 * @property string $tanggal_jatuh_tempo
 * @property string $keterangan
 * @property string $jumlah_setor
 * @property integer $created_at
 * @property integer $updated_at
 * @property integer $created_by
 * @property integer $updated_by
 *
 * @property \app\models\Card $customer
 * @property \app\models\Invoice[] $invoices
 * @property \app\models\JenisTransfer $jenisTransfer
 * @property \app\models\Rekening $rekeningSaya
 * @property \app\models\SetoranKasir[] $setoranKasirs
 */
abstract class BuktiPenerimaanBukuBank extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'bukti_penerimaan_buku_bank';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['blameable'] = [
            'class' => BlameableBehavior::class,
        ];
        $behaviors['timestamp'] = [
            'class' => TimestampBehavior::class,
                        ];
        
    return $behaviors;
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        $parentRules = parent::rules();
        return ArrayHelper::merge($parentRules, [
            [['customer_id'], 'required'],
            [['customer_id', 'rekening_saya_id', 'jenis_transfer_id'], 'integer'],
            [['tanggal_transaksi_transfer', 'tanggal_jatuh_tempo'], 'safe'],
            [['keterangan'], 'string'],
            [['jumlah_setor'], 'number'],
            [['reference_number'], 'string', 'max' => 50],
            [['nomor_transaksi_transfer'], 'string', 'max' => 255],
            [['customer_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Card::class, 'targetAttribute' => ['customer_id' => 'id']],
            [['rekening_saya_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Rekening::class, 'targetAttribute' => ['rekening_saya_id' => 'id']],
            [['jenis_transfer_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\JenisTransfer::class, 'targetAttribute' => ['jenis_transfer_id' => 'id']]
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return ArrayHelper::merge(parent::attributeLabels(), [
            'id' => 'ID',
            'reference_number' => 'Reference Number',
            'customer_id' => 'Customer ID',
            'rekening_saya_id' => 'Rekening Saya ID',
            'jenis_transfer_id' => 'Jenis Transfer ID',
            'nomor_transaksi_transfer' => 'Nomor Transaksi Transfer',
            'tanggal_transaksi_transfer' => 'Tanggal Transaksi Transfer',
            'tanggal_jatuh_tempo' => 'Tanggal Jatuh Tempo',
            'keterangan' => 'Keterangan',
            'jumlah_setor' => 'Jumlah Setor',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'created_by' => 'Created By',
            'updated_by' => 'Updated By',
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return ArrayHelper::merge(parent::attributeHints(), [
            'nomor_transaksi_transfer' => 'Bukti setor',
            'tanggal_transaksi_transfer' => 'Tanggal setor',
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCustomer()
    {
        return $this->hasOne(\app\models\Card::class, ['id' => 'customer_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInvoices()
    {
        return $this->hasMany(\app\models\Invoice::class, ['bukti_penerimaan_buku_bank_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getJenisTransfer()
    {
        return $this->hasOne(\app\models\JenisTransfer::class, ['id' => 'jenis_transfer_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRekeningSaya()
    {
        return $this->hasOne(\app\models\Rekening::class, ['id' => 'rekening_saya_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSetoranKasirs()
    {
        return $this->hasMany(\app\models\SetoranKasir::class, ['bukti_penerimaan_buku_bank_id' => 'id']);
    }

    /**
     * @inheritdoc
     * @return BuktiPenerimaanBukuBankQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new BuktiPenerimaanBukuBankQuery(static::class);
    }
}
