version: "3.7"

# SERVICES
services:

  # MySQL
  db:
    image: mysql:8.0.28-oracle
    hostname: mysql
    container_name: ${APP_NAME}-db
    tty: false
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - ./.docker/mysql/dev.sql:/docker-entrypoint-initdb.d/dev.sql
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
      - ${APP_NAME}-volumes:/var/lib/mysql/
    networks:
      - ${APP_NAME}-network
    ports:
      - ${DB_PORT}:3306

  # Yii2
  php:
    image: "${REGISTRY_HOST}/${APP_NAME}-php"
    hostname: php
    build:
      context: "."
      target: 'development' # set ke deploy saat akan production
      dockerfile: "./.docker/php/debian-apache/Dockerfile"
    container_name: ${APP_NAME}-php
    tty: true
    working_dir: /var/www/html
    ports:
      - "${WEB_SERVER_PORT}:80"
    env_file:
      - .env
    environment:
      - ENV=development
      - TARGET=development
    volumes:
      - ./:/var/www/html
      - ./.docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./.docker/php/debian-apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
      - ./.docker/php/ssl:/etc/apache2/ssl/
    networks:
      - ${APP_NAME}-network
    depends_on:
      - db

  # gulp untuk compile sass
  gulp:
    image: node:16.17.0-slim
    hostname: gulp
    container_name: ${APP_NAME}-gulp
    build:
      context: "."
      dockerfile: "./.docker/node/Dockerfile"
    working_dir: /var/www/html
    tty: true
    ports:
      - "3000:3000"
      - "3001:3001"
    volumes:
      - ./:/var/www/html
    networks:
      - ${APP_NAME}-network
    depends_on:
      - php

  # Seleniarm, bukan selenium.
  chrome:
    image: seleniarm/standalone-chromium:104.0
    hostname: chrome
    container_name: ${APP_NAME}-chrome
    privileged: true
    shm_size: 2g
    ports:
      - '4444:4444'
      - '7900:7900'
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - ${APP_NAME}-network

    # Adminer, web gui untuk database
  adminer:
    image: adminer:4.7.6
    container_name: ${APP_NAME}-adminer
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_DB_HOST: mysql
      ADMINER_DEFAULT_DB_NAME: adminer
      # ADMINER_DESIGN: nette
      ADMINER_PLUGINS: tables-filter tinymce
    ports:
      - "${ADMINER_PORT}:8080"
    volumes:
      - ./.docker/adminer/adminer.css:/var/www/html/adminer.css
    networks:
      - ${APP_NAME}-network

# Docker Networks
networks:
  jameson_tools-network:
    name: jameson_tools-network
    driver: bridge

# Docker Volumes
volumes:
  jameson_tools-volumes:
    driver: local